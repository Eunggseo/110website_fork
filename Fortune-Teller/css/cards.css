/* question styling*/
.question{
    background-color: #f3ECDF;
    font-size: 20pt;
    border: none;
    border-radius: 10px;
    height: 60px;
}

.question-text{
    background-color: #323232;
    color: #F1E2C3;
    border-radius: 10px;
    border-color: #F1E2C3;
    border: solid;
    font-size: xx-large;
    text-align: center;
    padding: 10px;
    word-wrap: break-word;
}

.question-box {
    margin: 0 auto;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    max-width: 70%;
    margin-top: 20%;
    position: relative;
    transition: margin-top 1s ease;
}

#question-form {
    display: flex;
    justify-content: center;
    gap: 15px;
    width: 500px;
}

.question-box button{
    padding: 20px 10px;
    font-size: 14pt;
    width: 20%;
}

/* cards styling */
#deck{
    margin-left: 50px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    visibility: hidden;
    position: relative;
}

#deck img {
    max-width: 200px;
    position: relative;
    margin-left: -5vw;
    border-radius: 10px;
}

#deck img:hover {
    box-shadow: 0px 0px 10px 0px #F1E2C3;
    top: -10px;
}

#instructions {
    text-align: center;
    color: #F1E2C3;
    font-size: 40px;
    visibility: hidden;
}

.fade-in {
    opacity: 1;
	animation-name: fadeInOpacity;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: 1s;
}

@keyframes fadeInOpacity {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

.overlay {
    color: #F1E2C3;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #051D41;
    padding: 20px;
    text-align: center;
    font-size: 11pt;
    border-radius: 10px; /* Rounded edges */
    outline: solid;
    outline-offset: -5px;
    outline-color: #F1E2C3;
    outline-width: 3px;
    position: 'fixed';

}

.choose_another {
    display: inline-block;
    padding: 10px 20px;
}

.flex_container {
    display: flex;
}

.image_container {
    padding: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.info_container {
    padding: 10px;
    display: flex;
    flex-direction: column; 
    justify-content: center; 
    overflow: auto; 
    height: 500px;
    width: 200px;
}

.bottom_card_container {
    position: fixed;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
}

.bottom_card_container img {
    margin: 10px;
    margin-bottom: 0;
}

#pick2-box {
    display: flex;
    justify-content: center;
    gap: 15px;
    width: 500px;
    margin-top: 15%;
    margin-bottom: 5%;
}

.left_container {
    width: 47%;
    float: left;
}

.right_container {
    width: 47%;
    float: right;
}

.choose_container {
    bottom: 0;
}

.pick2-overlay {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* For smaller screens */
@media screen and (max-width: 450px) {
    /* Decrease font size of input and height of input box */
    .question{
        font-size: 10pt;
        height: 50px;
    }
    /* Decrease size of prompt font */
    .question-text{
        font-size: large;
    }
    /* Increase size of prompt given */
    .question-box {
        max-width: 90%;
        margin-top: 10vh;
        transition: margin-top 1s ease;
    }
    /* Shrink the gap between input and submit. Make submit relative */
    #question-form {
        gap: 10px;
        width: 100vw;
    }
    /* Decrease size of submit button text */
    .question-box button{
        font-size: 10pt;
    }
    /* Make margin of deck of cards relative */
    #deck{
        margin-left: 5vw;
    }
    /* Make cards smaller */
    #deck img {
        max-width: 110px;
    }
    /* Decrease size of "Pick a Card" */
    #instructions {
        font-size: 20px;
    }
    /* Make the whole reading relative to screen */
    .flex_container {
        width: 80vw;
    }
    /* Decrease padding for image reading */
    .image_container {
        padding: 3px;
    }
    /* Keep dimensions of the image given for the reading */
    .image_container img{
        object-fit: contain;
    }
    /* Decrease padding and relative width of the text for the reading */
    .info_container {
        padding: 3px;
        width: 50vh;
    }    
}
